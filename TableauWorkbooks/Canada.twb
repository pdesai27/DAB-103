<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1214.2052                               -->
<workbook source-build='2021.3.5 (20213.21.1214.2052)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='df_canada+' inline='true' name='federated.1hgvwy21yqmkws10tdu5q129633o' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_canada' name='textscan.09m139s1flitu2152i1il0qx29d0'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/Pooja/Desktop/Tableau_Exercise Files/DAB 103 Project Tableau/df_canada.csv' dataRefreshTime='' directory='C:/Users/Pooja/Desktop/Tableau_Exercise Files/DAB 103 Project Tableau' filename='df_canada.csv' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.09m139s1flitu2152i1il0qx29d0' name='df2_canada.csv' table='[C:\Users\Abiodun\Desktop\St Clair\DAB103\Project datasets\Canada Dataframes\df2_canada#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:L135:no:A1:L135:1' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country_code' ordinal='0' />
            <column datatype='string' name='country_name' ordinal='1' />
            <column datatype='string' name='wb_income' ordinal='2' />
            <column datatype='string' name='wb_region' ordinal='3' />
            <column datatype='string' name='isic_section_name' ordinal='4' />
            <column datatype='string' name='industry_name' ordinal='5' />
            <column datatype='real' name='net_per_10K_2015' ordinal='6' />
            <column datatype='real' name='net_per_10K_2016' ordinal='7' />
            <column datatype='real' name='net_per_10K_2017' ordinal='8' />
            <column datatype='real' name='net_per_10K_2018' ordinal='9' />
            <column datatype='real' name='net_per_10K_2019' ordinal='10' />
            <column datatype='real' name='avg_industry_migration' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.09m139s1flitu2152i1il0qx29d0' name='df_canada.csv' table='[C:\Users\Abiodun\Desktop\St Clair\DAB103\Project datasets\Canada Dataframes\df_canada#csv]' type='table'>
            <columns character-set='UTF-8' gridOrigin='A1:N114:no:A1:N114:1' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='base_country_code' ordinal='0' />
              <column datatype='string' name='base_country_name' ordinal='1' />
              <column datatype='string' name='base_country_wb_income' ordinal='2' />
              <column datatype='string' name='base_country_wb_region' ordinal='3' />
              <column datatype='string' name='target_country_code' ordinal='4' />
              <column datatype='string' name='target_country_name' ordinal='5' />
              <column datatype='string' name='target_country_wb_income' ordinal='6' />
              <column datatype='string' name='target_country_wb_region' ordinal='7' />
              <column datatype='real' name='net_per_10K_2015' ordinal='8' />
              <column datatype='real' name='net_per_10K_2016' ordinal='9' />
              <column datatype='real' name='net_per_10K_2017' ordinal='10' />
              <column datatype='real' name='net_per_10K_2018' ordinal='11' />
              <column datatype='real' name='net_per_10K_2019' ordinal='12' />
              <column datatype='real' name='avg_country_migration' ordinal='13' />
            </columns>
          </relation>
          <relation connection='textscan.09m139s1flitu2152i1il0qx29d0' name='df2_canada.csv' table='[C:\Users\Abiodun\Desktop\St Clair\DAB103\Project datasets\Canada Dataframes\df2_canada#csv]' type='table'>
            <columns character-set='UTF-8' gridOrigin='A1:L135:no:A1:L135:1' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='country_code' ordinal='0' />
              <column datatype='string' name='country_name' ordinal='1' />
              <column datatype='string' name='wb_income' ordinal='2' />
              <column datatype='string' name='wb_region' ordinal='3' />
              <column datatype='string' name='isic_section_name' ordinal='4' />
              <column datatype='string' name='industry_name' ordinal='5' />
              <column datatype='real' name='net_per_10K_2015' ordinal='6' />
              <column datatype='real' name='net_per_10K_2016' ordinal='7' />
              <column datatype='real' name='net_per_10K_2017' ordinal='8' />
              <column datatype='real' name='net_per_10K_2018' ordinal='9' />
              <column datatype='real' name='net_per_10K_2019' ordinal='10' />
              <column datatype='real' name='avg_industry_migration' ordinal='11' />
            </columns>
          </relation>
          <relation connection='textscan.09m139s1flitu2152i1il0qx29d0' name='df3_canada.csv' table='[df3_canada#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='country_code' ordinal='0' />
              <column datatype='string' name='country_name' ordinal='1' />
              <column datatype='string' name='wb_income' ordinal='2' />
              <column datatype='string' name='wb_region' ordinal='3' />
              <column datatype='string' name='skill_group_category' ordinal='4' />
              <column datatype='string' name='skill_group_name' ordinal='5' />
              <column datatype='real' name='net_per_10K_2015' ordinal='6' />
              <column datatype='real' name='net_per_10K_2016' ordinal='7' />
              <column datatype='real' name='net_per_10K_2017' ordinal='8' />
              <column datatype='real' name='net_per_10K_2018' ordinal='9' />
              <column datatype='real' name='net_per_10K_2019' ordinal='10' />
              <column datatype='real' name='avg_skill_migration' ordinal='11' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[avg_country_migration]' value='[df_canada.csv].[avg_country_migration]' />
          <map key='[avg_industry_migration]' value='[df2_canada.csv].[avg_industry_migration]' />
          <map key='[avg_skill_migration]' value='[df3_canada.csv].[avg_skill_migration]' />
          <map key='[base_country_code]' value='[df_canada.csv].[base_country_code]' />
          <map key='[base_country_name]' value='[df_canada.csv].[base_country_name]' />
          <map key='[base_country_wb_income]' value='[df_canada.csv].[base_country_wb_income]' />
          <map key='[base_country_wb_region]' value='[df_canada.csv].[base_country_wb_region]' />
          <map key='[country_code (df3_canada.csv)]' value='[df3_canada.csv].[country_code]' />
          <map key='[country_code]' value='[df2_canada.csv].[country_code]' />
          <map key='[country_name (df3_canada.csv)]' value='[df3_canada.csv].[country_name]' />
          <map key='[country_name]' value='[df2_canada.csv].[country_name]' />
          <map key='[industry_name]' value='[df2_canada.csv].[industry_name]' />
          <map key='[isic_section_name]' value='[df2_canada.csv].[isic_section_name]' />
          <map key='[net_per_10K_2015 (df2_canada.csv)]' value='[df2_canada.csv].[net_per_10K_2015]' />
          <map key='[net_per_10K_2015 (df3_canada.csv)]' value='[df3_canada.csv].[net_per_10K_2015]' />
          <map key='[net_per_10K_2015]' value='[df_canada.csv].[net_per_10K_2015]' />
          <map key='[net_per_10K_2016 (df2_canada.csv)]' value='[df2_canada.csv].[net_per_10K_2016]' />
          <map key='[net_per_10K_2016 (df3_canada.csv)]' value='[df3_canada.csv].[net_per_10K_2016]' />
          <map key='[net_per_10K_2016]' value='[df_canada.csv].[net_per_10K_2016]' />
          <map key='[net_per_10K_2017 (df2_canada.csv)]' value='[df2_canada.csv].[net_per_10K_2017]' />
          <map key='[net_per_10K_2017 (df3_canada.csv)]' value='[df3_canada.csv].[net_per_10K_2017]' />
          <map key='[net_per_10K_2017]' value='[df_canada.csv].[net_per_10K_2017]' />
          <map key='[net_per_10K_2018 (df2_canada.csv)]' value='[df2_canada.csv].[net_per_10K_2018]' />
          <map key='[net_per_10K_2018 (df3_canada.csv)]' value='[df3_canada.csv].[net_per_10K_2018]' />
          <map key='[net_per_10K_2018]' value='[df_canada.csv].[net_per_10K_2018]' />
          <map key='[net_per_10K_2019 (df2_canada.csv)]' value='[df2_canada.csv].[net_per_10K_2019]' />
          <map key='[net_per_10K_2019 (df3_canada.csv)]' value='[df3_canada.csv].[net_per_10K_2019]' />
          <map key='[net_per_10K_2019]' value='[df_canada.csv].[net_per_10K_2019]' />
          <map key='[skill_group_category]' value='[df3_canada.csv].[skill_group_category]' />
          <map key='[skill_group_name]' value='[df3_canada.csv].[skill_group_name]' />
          <map key='[target_country_code]' value='[df_canada.csv].[target_country_code]' />
          <map key='[target_country_name]' value='[df_canada.csv].[target_country_name]' />
          <map key='[target_country_wb_income]' value='[df_canada.csv].[target_country_wb_income]' />
          <map key='[target_country_wb_region]' value='[df_canada.csv].[target_country_wb_region]' />
          <map key='[wb_income (df3_canada.csv)]' value='[df3_canada.csv].[wb_income]' />
          <map key='[wb_income]' value='[df2_canada.csv].[wb_income]' />
          <map key='[wb_region (df3_canada.csv)]' value='[df3_canada.csv].[wb_region]' />
          <map key='[wb_region]' value='[df2_canada.csv].[wb_region]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_canada.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N114:no:A1:N114:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df2_canada.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L135:no:A1:L135:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df3_canada.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[base_country_code]</local-name>
            <parent-name>[df_canada.csv]</parent-name>
            <remote-alias>base_country_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_canada.csv_29845CF8C1E8498DAD7945B440AB2B1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[base_country_name]</local-name>
            <parent-name>[df_canada.csv]</parent-name>
            <remote-alias>base_country_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_canada.csv_29845CF8C1E8498DAD7945B440AB2B1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_country_wb_income</remote-name>
            <remote-type>129</remote-type>
            <local-name>[base_country_wb_income]</local-name>
            <parent-name>[df_canada.csv]</parent-name>
            <remote-alias>base_country_wb_income</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_canada.csv_29845CF8C1E8498DAD7945B440AB2B1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>base_country_wb_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[base_country_wb_region]</local-name>
            <parent-name>[df_canada.csv]</parent-name>
            <remote-alias>base_country_wb_region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_canada.csv_29845CF8C1E8498DAD7945B440AB2B1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_country_code]</local-name>
            <parent-name>[df_canada.csv]</parent-name>
            <remote-alias>target_country_code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_canada.csv_29845CF8C1E8498DAD7945B440AB2B1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_country_name]</local-name>
            <parent-name>[df_canada.csv]</parent-name>
            <remote-alias>target_country_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_canada.csv_29845CF8C1E8498DAD7945B440AB2B1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_country_wb_income</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_country_wb_income]</local-name>
            <parent-name>[df_canada.csv]</parent-name>
            <remote-alias>target_country_wb_income</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_canada.csv_29845CF8C1E8498DAD7945B440AB2B1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>target_country_wb_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[target_country_wb_region]</local-name>
            <parent-name>[df_canada.csv]</parent-name>
            <remote-alias>target_country_wb_region</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_canada.csv_29845CF8C1E8498DAD7945B440AB2B1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_per_10K_2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[net_per_10K_2015]</local-name>
            <parent-name>[df_canada.csv]</parent-name>
            <remote-alias>net_per_10K_2015</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_canada.csv_29845CF8C1E8498DAD7945B440AB2B1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_per_10K_2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[net_per_10K_2016]</local-name>
            <parent-name>[df_canada.csv]</parent-name>
            <remote-alias>net_per_10K_2016</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_canada.csv_29845CF8C1E8498DAD7945B440AB2B1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_per_10K_2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[net_per_10K_2017]</local-name>
            <parent-name>[df_canada.csv]</parent-name>
            <remote-alias>net_per_10K_2017</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_canada.csv_29845CF8C1E8498DAD7945B440AB2B1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_per_10K_2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[net_per_10K_2018]</local-name>
            <parent-name>[df_canada.csv]</parent-name>
            <remote-alias>net_per_10K_2018</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_canada.csv_29845CF8C1E8498DAD7945B440AB2B1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_per_10K_2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[net_per_10K_2019]</local-name>
            <parent-name>[df_canada.csv]</parent-name>
            <remote-alias>net_per_10K_2019</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_canada.csv_29845CF8C1E8498DAD7945B440AB2B1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_country_migration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_country_migration]</local-name>
            <parent-name>[df_canada.csv]</parent-name>
            <remote-alias>avg_country_migration</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df_canada.csv_29845CF8C1E8498DAD7945B440AB2B1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[df2_canada.csv]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df2_canada.csv_01C3071DA1CE4A6C85F2C0873E596AF0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[df2_canada.csv]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df2_canada.csv_01C3071DA1CE4A6C85F2C0873E596AF0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wb_income</remote-name>
            <remote-type>129</remote-type>
            <local-name>[wb_income]</local-name>
            <parent-name>[df2_canada.csv]</parent-name>
            <remote-alias>wb_income</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df2_canada.csv_01C3071DA1CE4A6C85F2C0873E596AF0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wb_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[wb_region]</local-name>
            <parent-name>[df2_canada.csv]</parent-name>
            <remote-alias>wb_region</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df2_canada.csv_01C3071DA1CE4A6C85F2C0873E596AF0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>isic_section_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[isic_section_name]</local-name>
            <parent-name>[df2_canada.csv]</parent-name>
            <remote-alias>isic_section_name</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df2_canada.csv_01C3071DA1CE4A6C85F2C0873E596AF0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>industry_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[industry_name]</local-name>
            <parent-name>[df2_canada.csv]</parent-name>
            <remote-alias>industry_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df2_canada.csv_01C3071DA1CE4A6C85F2C0873E596AF0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_per_10K_2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[net_per_10K_2015 (df2_canada.csv)]</local-name>
            <parent-name>[df2_canada.csv]</parent-name>
            <remote-alias>net_per_10K_2015</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df2_canada.csv_01C3071DA1CE4A6C85F2C0873E596AF0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_per_10K_2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[net_per_10K_2016 (df2_canada.csv)]</local-name>
            <parent-name>[df2_canada.csv]</parent-name>
            <remote-alias>net_per_10K_2016</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df2_canada.csv_01C3071DA1CE4A6C85F2C0873E596AF0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_per_10K_2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[net_per_10K_2017 (df2_canada.csv)]</local-name>
            <parent-name>[df2_canada.csv]</parent-name>
            <remote-alias>net_per_10K_2017</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df2_canada.csv_01C3071DA1CE4A6C85F2C0873E596AF0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_per_10K_2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[net_per_10K_2018 (df2_canada.csv)]</local-name>
            <parent-name>[df2_canada.csv]</parent-name>
            <remote-alias>net_per_10K_2018</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df2_canada.csv_01C3071DA1CE4A6C85F2C0873E596AF0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_per_10K_2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[net_per_10K_2019 (df2_canada.csv)]</local-name>
            <parent-name>[df2_canada.csv]</parent-name>
            <remote-alias>net_per_10K_2019</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df2_canada.csv_01C3071DA1CE4A6C85F2C0873E596AF0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_industry_migration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_industry_migration]</local-name>
            <parent-name>[df2_canada.csv]</parent-name>
            <remote-alias>avg_industry_migration</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df2_canada.csv_01C3071DA1CE4A6C85F2C0873E596AF0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code (df3_canada.csv)]</local-name>
            <parent-name>[df3_canada.csv]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3_canada.csv_2D45F6D3F217461495C5B75E3B8DEBCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name (df3_canada.csv)]</local-name>
            <parent-name>[df3_canada.csv]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3_canada.csv_2D45F6D3F217461495C5B75E3B8DEBCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wb_income</remote-name>
            <remote-type>129</remote-type>
            <local-name>[wb_income (df3_canada.csv)]</local-name>
            <parent-name>[df3_canada.csv]</parent-name>
            <remote-alias>wb_income</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3_canada.csv_2D45F6D3F217461495C5B75E3B8DEBCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wb_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[wb_region (df3_canada.csv)]</local-name>
            <parent-name>[df3_canada.csv]</parent-name>
            <remote-alias>wb_region</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3_canada.csv_2D45F6D3F217461495C5B75E3B8DEBCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>skill_group_category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[skill_group_category]</local-name>
            <parent-name>[df3_canada.csv]</parent-name>
            <remote-alias>skill_group_category</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3_canada.csv_2D45F6D3F217461495C5B75E3B8DEBCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>skill_group_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[skill_group_name]</local-name>
            <parent-name>[df3_canada.csv]</parent-name>
            <remote-alias>skill_group_name</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3_canada.csv_2D45F6D3F217461495C5B75E3B8DEBCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_per_10K_2015</remote-name>
            <remote-type>5</remote-type>
            <local-name>[net_per_10K_2015 (df3_canada.csv)]</local-name>
            <parent-name>[df3_canada.csv]</parent-name>
            <remote-alias>net_per_10K_2015</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3_canada.csv_2D45F6D3F217461495C5B75E3B8DEBCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_per_10K_2016</remote-name>
            <remote-type>5</remote-type>
            <local-name>[net_per_10K_2016 (df3_canada.csv)]</local-name>
            <parent-name>[df3_canada.csv]</parent-name>
            <remote-alias>net_per_10K_2016</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3_canada.csv_2D45F6D3F217461495C5B75E3B8DEBCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_per_10K_2017</remote-name>
            <remote-type>5</remote-type>
            <local-name>[net_per_10K_2017 (df3_canada.csv)]</local-name>
            <parent-name>[df3_canada.csv]</parent-name>
            <remote-alias>net_per_10K_2017</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3_canada.csv_2D45F6D3F217461495C5B75E3B8DEBCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_per_10K_2018</remote-name>
            <remote-type>5</remote-type>
            <local-name>[net_per_10K_2018 (df3_canada.csv)]</local-name>
            <parent-name>[df3_canada.csv]</parent-name>
            <remote-alias>net_per_10K_2018</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3_canada.csv_2D45F6D3F217461495C5B75E3B8DEBCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_per_10K_2019</remote-name>
            <remote-type>5</remote-type>
            <local-name>[net_per_10K_2019 (df3_canada.csv)]</local-name>
            <parent-name>[df3_canada.csv]</parent-name>
            <remote-alias>net_per_10K_2019</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3_canada.csv_2D45F6D3F217461495C5B75E3B8DEBCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_skill_migration</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_skill_migration]</local-name>
            <parent-name>[df3_canada.csv]</parent-name>
            <remote-alias>avg_skill_migration</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[df3_canada.csv_2D45F6D3F217461495C5B75E3B8DEBCC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='df2_canada.csv' datatype='table' name='[__tableau_internal_object_id__].[df2_canada.csv_01C3071DA1CE4A6C85F2C0873E596AF0]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df3_canada.csv' datatype='table' name='[__tableau_internal_object_id__].[df3_canada.csv_2D45F6D3F217461495C5B75E3B8DEBCC]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='df_canada.csv' datatype='table' name='[__tableau_internal_object_id__].[df_canada.csv_29845CF8C1E8498DAD7945B440AB2B1C]' role='measure' type='quantitative' />
      <column caption='Avg Country Migration' datatype='real' name='[avg_country_migration]' role='measure' type='quantitative' />
      <column caption='Avg Industry Migration' datatype='real' name='[avg_industry_migration]' role='measure' type='quantitative' />
      <column caption='Avg Skill Migration' datatype='real' name='[avg_skill_migration]' role='measure' type='quantitative' />
      <column caption='Base Country Code' datatype='string' name='[base_country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Base Country Name' datatype='string' name='[base_country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Base Country Wb Income' datatype='string' name='[base_country_wb_income]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Base Country Wb Region' datatype='string' name='[base_country_wb_region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code (Df3 Canada.Csv)' datatype='string' name='[country_code (df3_canada.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name (Df3 Canada.Csv)' datatype='string' name='[country_name (df3_canada.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Industry Name' datatype='string' name='[industry_name]' role='dimension' type='nominal' />
      <column caption='Isic Section Name' datatype='string' name='[isic_section_name]' role='dimension' type='nominal' />
      <column caption='net per 10K 2015 (df2 canada.csv)' datatype='real' name='[net_per_10K_2015 (df2_canada.csv)]' role='measure' type='quantitative' />
      <column caption='net per 10K 2015 (df3 canada.csv)' datatype='real' name='[net_per_10K_2015 (df3_canada.csv)]' role='measure' type='quantitative' />
      <column caption='net per 10K 2015' datatype='real' name='[net_per_10K_2015]' role='measure' type='quantitative' />
      <column caption='net per 10K 2016 (df2 canada.csv)' datatype='real' name='[net_per_10K_2016 (df2_canada.csv)]' role='measure' type='quantitative' />
      <column caption='net per 10K 2016 (df3 canada.csv)' datatype='real' name='[net_per_10K_2016 (df3_canada.csv)]' role='measure' type='quantitative' />
      <column caption='net per 10K 2016' datatype='real' name='[net_per_10K_2016]' role='measure' type='quantitative' />
      <column caption='net per 10K 2017 (df2 canada.csv)' datatype='real' name='[net_per_10K_2017 (df2_canada.csv)]' role='measure' type='quantitative' />
      <column caption='net per 10K 2017 (df3 canada.csv)' datatype='real' name='[net_per_10K_2017 (df3_canada.csv)]' role='measure' type='quantitative' />
      <column caption='net per 10K 2017' datatype='real' name='[net_per_10K_2017]' role='measure' type='quantitative' />
      <column caption='net per 10K 2018 (df2 canada.csv)' datatype='real' name='[net_per_10K_2018 (df2_canada.csv)]' role='measure' type='quantitative' />
      <column caption='net per 10K 2018 (df3 canada.csv)' datatype='real' name='[net_per_10K_2018 (df3_canada.csv)]' role='measure' type='quantitative' />
      <column caption='net per 10K 2018' datatype='real' name='[net_per_10K_2018]' role='measure' type='quantitative' />
      <column caption='net per 10K 2019 (df2 canada.csv)' datatype='real' name='[net_per_10K_2019 (df2_canada.csv)]' role='measure' type='quantitative' />
      <column caption='net per 10K 2019 (df3 canada.csv)' datatype='real' name='[net_per_10K_2019 (df3_canada.csv)]' role='measure' type='quantitative' />
      <column caption='net per 10K 2019' datatype='real' name='[net_per_10K_2019]' role='measure' type='quantitative' />
      <column caption='Skill Group Category' datatype='string' name='[skill_group_category]' role='dimension' type='nominal' />
      <column caption='Skill Group Name' datatype='string' name='[skill_group_name]' role='dimension' type='nominal' />
      <column caption='Target Country Code' datatype='string' name='[target_country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Target Country Name' datatype='string' name='[target_country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Target Country Wb Income' datatype='string' name='[target_country_wb_income]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Target Country Wb Region' datatype='string' name='[target_country_wb_region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Wb Income (Df3 Canada.Csv)' datatype='string' name='[wb_income (df3_canada.csv)]' role='dimension' type='nominal' />
      <column caption='Wb Income' datatype='string' name='[wb_income]' role='dimension' type='nominal' />
      <column caption='Wb Region (Df3 Canada.Csv)' datatype='string' name='[wb_region (df3_canada.csv)]' role='dimension' type='nominal' />
      <column caption='Wb Region' datatype='string' name='[wb_region]' role='dimension' type='nominal' />
      <column-instance column='[industry_name]' derivation='None' name='[none:industry_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[skill_group_name]' derivation='None' name='[none:skill_group_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[target_country_name]' derivation='None' name='[none:target_country_name:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:target_country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Taiwan, China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:skill_group_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Air Force&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Business Management&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Corporate Communications&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Earth Science&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fluid Mechanics&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Information Management&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Library Science&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Neurology&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Persuasion&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Property Management&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Scientific Computing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Time Management&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accounts Payable&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Art History&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Composites&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Delivery Operations&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Environmental Engineering&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Growth Strategies&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;K-12 Education&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mining&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Organic Chemistry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Problem Solving&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Religious Studies&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tax Accounting&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Web Hosting&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aerospace Engineering&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Automotive&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Conceptual Art&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Digital Literacy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Family Law&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hospitality Industry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Landscape Architecture&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;National Security&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Payroll Services&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Product Testing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Revenue Analysis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Technical Support&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zoology&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alcoholic Beverages&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chemical Processing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Customer Experience&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Educational Research&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Forestry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Insurance&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maintenance &amp; Repair&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nursing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Physical Medicine and Rehabilitation&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Public Policy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Social Services&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Urology&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Air Traffic Control&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Capital Markets&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cosmetology&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Economics&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Food Manufacturing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Inorganic Chemistry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Linguistics&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nonprofit Management&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pharmaceutical Manufacturing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Psychiatry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Signal Processing&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Translation&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Affiliate Marketing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Biomedical Engineering&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Construction Engineering&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Digital Marketing&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Family Medicine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Human Computer Interaction&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Law&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Naval Architecture&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pediatrics&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Professional Sports&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Robotics&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Telecommunications&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Architecture&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Compensation &amp; Benefits&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Data-driven Decision Making&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Entrepreneurship&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Graphic Design&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Investor Relations&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mathematics&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ophthalmology&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Power Systems&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Recreation&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Structural Engineering&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Water Engineering&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Active Learning&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Artificial Intelligence (AI)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Computer Graphics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dentistry&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Environmental Science&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Healthcare Management&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kinesiology&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mobile Application Development&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Orthopedic Surgery&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Procurement&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Research&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tax Law&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wellness&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Anthropology&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Communication&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Data Science&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Employee Learning &amp; Development&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Genetic Engineering&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Inventory Management&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maritime Operations&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oncology&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Plastics&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Reading Comprehension&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sports Coaching&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Visual Arts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Agricultural Production&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bookkeeping&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Contract Law&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Documentation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Financial Accounting&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Human Resources (HR)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Leadership&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Navy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;People Management&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Project Management&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sales Leads&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Television&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Analytical Reasoning&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Childcare&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Customer Service Systems&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Electronic Control Systems&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Game Development&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Intellectual Property&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Management Accounting&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Obstetrics&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Physical Security&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Public Safety&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sociology&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Utilities&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anesthesiology&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Commercial Banking&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cybersecurity&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Electronics&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gastroenterology&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Interior Design&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Management Consulting&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oceanography&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Physics&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Radio Production&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Software Development Life Cycle (SDLC)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Veterinary Medicine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Apparel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Communication Disorders&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Data Storage Technologies&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Enterprise Software&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Geotechnical Engineering&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Investment Banking&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Materials Science&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Operational Efficiency&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Politics&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Real Estate&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Structural Analysis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Volunteer Management&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Army&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Competitive Strategies&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Debt Collection&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Environmental Consulting&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ground Transportation&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Journalism&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Medicine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oral Comprehension&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Printing&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Recruiting&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;System Administration&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Web Development&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aircraft Management&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cardiology&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Creativity Skills&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Editing&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Food Service Operations&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Inside Sales&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Literature&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nuclear Engineering&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pharmaceutics&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Psychology&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Social Media&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Travel Management&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Agronomy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cooking&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Drilling Engineering&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Flexible Approach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Industrial Design&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Legislation&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Negotiation&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Personal Coaching&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Property Law&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sales Operations&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Theatre&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Administrative Assistance&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arts &amp; Crafts&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Computer Hardware&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dermatology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Event Planning&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Higher Education&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Labor and Employment Law&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Music&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Partner Development&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Product Development&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Retail&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Teaching&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wholesale&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Animation&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commercial Photography&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dance&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Emergency Medicine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;General Surgery&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;International Law&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manufacturing Operations&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oil &amp; Gas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Physiology&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Radiology&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Software Testing&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Video&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Airlines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carpentry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Criminal Law&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Educational Administration&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Foreign Languages&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Instrumentation&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machining&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nuclear Physics&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Photography&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Public Health&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Social Perceptiveness&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Urban Planning&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Advertising&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auditing&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Computer Networking&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Development Tools&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Evolutionary Biology&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;History&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Land Surveying&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nanotechnology&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pathology&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Product Marketing&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Retail Packaging&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Teamwork&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Writing&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:industry_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Biotechnology&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Defense &amp; Space&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Health, Wellness &amp; Fitness&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Logistics &amp; Supply Chain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Online Media&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Recreational Facilities &amp; Services&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Venture Capital &amp; Private Equity&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accounting&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Computer Networking&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Food &amp; Beverages&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;International Trade &amp; Development&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Military&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Printing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Supermarkets&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Architecture &amp; Planning&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Consumer Goods&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gambling &amp; Casinos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Law Enforcement&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Music&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Public Relations &amp; Communications&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tobacco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Capital Markets&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Electrical &amp; Electronic Manufacturing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Human Resources&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maritime&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper &amp; Forest Products&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Restaurants&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wireless&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadcast Media&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Design&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Higher Education&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxury Goods &amp; Jewelry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Outsourcing/Offshoring&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Religious Institutions&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Veterinary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Automotive&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Consumer Services&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Government Administration&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Law Practice&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Newspapers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Public Safety&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Translation &amp; Localization&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Computer Games&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Financial Services&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Insurance&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Medical Practice&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Political Organization&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sports&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Airlines/Aviation&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Computer Software&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Food Production&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Internet&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mining &amp; Metals&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Professional Training &amp; Coaching&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Telecommunications&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Commercial Real Estate&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Facilities Services&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Information Services&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Media Production&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Photography&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shipbuilding&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aviation &amp; Aerospace&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cosmetics&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Government Relations&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Legal Services&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Non-Profit Organization Management&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Publishing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Transportation/Trucking/Railroad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chemicals&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Entertainment&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Import &amp; Export&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Market Research&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Performing Arts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Retail&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Writing &amp; Editing&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Civic &amp; Social Organization&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Environmental Services&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Individual &amp; Family Services&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marketing &amp; Advertising&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pharmaceuticals&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Security &amp; Investigations&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Computer &amp; Network Security&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Farming&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Information Technology &amp; Services&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Medical Device&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Plastics&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sporting Goods&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Computer Hardware&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fine Art&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;International Affairs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mental Health Care&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Primary/Secondary Education&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Staffing &amp; Recruiting&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Building Materials&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E-Learning&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hospital &amp; Health Care&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Machinery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Package/Freight Delivery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Renewables &amp; Environment&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wholesale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Banking&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dairy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Graphic Design&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Leisure, Travel &amp; Tourism&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oil &amp; Energy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Real Estate&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Utilities&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Animation&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Construction&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fundraising&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Investment Banking&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Motion Pictures &amp; Film&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Program Development&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Textiles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Civil Engineering&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Events Services&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Industrial Automation&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mechanical or Industrial Engineering&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philanthropy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Semiconductors&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Business Supplies &amp; Equipment&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Education Management&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hospitality&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Management Consulting&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Packaging &amp; Containers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Research&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wine &amp; Spirits&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Apparel &amp; Fashion&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Consumer Electronics&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Investment Management&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Museums &amp; Institutions&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Public Policy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Think Tanks&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Nigeria&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='df2_canada.csv' id='df2_canada.csv_01C3071DA1CE4A6C85F2C0873E596AF0'>
            <properties context=''>
              <relation connection='textscan.09m139s1flitu2152i1il0qx29d0' name='df2_canada.csv' table='[C:\Users\Abiodun\Desktop\St Clair\DAB103\Project datasets\Canada Dataframes\df2_canada#csv]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:L135:no:A1:L135:1' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='country_code' ordinal='0' />
                  <column datatype='string' name='country_name' ordinal='1' />
                  <column datatype='string' name='wb_income' ordinal='2' />
                  <column datatype='string' name='wb_region' ordinal='3' />
                  <column datatype='string' name='isic_section_name' ordinal='4' />
                  <column datatype='string' name='industry_name' ordinal='5' />
                  <column datatype='real' name='net_per_10K_2015' ordinal='6' />
                  <column datatype='real' name='net_per_10K_2016' ordinal='7' />
                  <column datatype='real' name='net_per_10K_2017' ordinal='8' />
                  <column datatype='real' name='net_per_10K_2018' ordinal='9' />
                  <column datatype='real' name='net_per_10K_2019' ordinal='10' />
                  <column datatype='real' name='avg_industry_migration' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='df3_canada.csv' id='df3_canada.csv_2D45F6D3F217461495C5B75E3B8DEBCC'>
            <properties context=''>
              <relation connection='textscan.09m139s1flitu2152i1il0qx29d0' name='df3_canada.csv' table='[df3_canada#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='country_code' ordinal='0' />
                  <column datatype='string' name='country_name' ordinal='1' />
                  <column datatype='string' name='wb_income' ordinal='2' />
                  <column datatype='string' name='wb_region' ordinal='3' />
                  <column datatype='string' name='skill_group_category' ordinal='4' />
                  <column datatype='string' name='skill_group_name' ordinal='5' />
                  <column datatype='real' name='net_per_10K_2015' ordinal='6' />
                  <column datatype='real' name='net_per_10K_2016' ordinal='7' />
                  <column datatype='real' name='net_per_10K_2017' ordinal='8' />
                  <column datatype='real' name='net_per_10K_2018' ordinal='9' />
                  <column datatype='real' name='net_per_10K_2019' ordinal='10' />
                  <column datatype='real' name='avg_skill_migration' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='df_canada.csv' id='df_canada.csv_29845CF8C1E8498DAD7945B440AB2B1C'>
            <properties context=''>
              <relation connection='textscan.09m139s1flitu2152i1il0qx29d0' name='df_canada.csv' table='[C:\Users\Abiodun\Desktop\St Clair\DAB103\Project datasets\Canada Dataframes\df_canada#csv]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:N114:no:A1:N114:1' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='base_country_code' ordinal='0' />
                  <column datatype='string' name='base_country_name' ordinal='1' />
                  <column datatype='string' name='base_country_wb_income' ordinal='2' />
                  <column datatype='string' name='base_country_wb_region' ordinal='3' />
                  <column datatype='string' name='target_country_code' ordinal='4' />
                  <column datatype='string' name='target_country_name' ordinal='5' />
                  <column datatype='string' name='target_country_wb_income' ordinal='6' />
                  <column datatype='string' name='target_country_wb_region' ordinal='7' />
                  <column datatype='real' name='net_per_10K_2015' ordinal='8' />
                  <column datatype='real' name='net_per_10K_2016' ordinal='9' />
                  <column datatype='real' name='net_per_10K_2017' ordinal='10' />
                  <column datatype='real' name='net_per_10K_2018' ordinal='11' />
                  <column datatype='real' name='net_per_10K_2019' ordinal='12' />
                  <column datatype='real' name='avg_country_migration' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[base_country_name]' />
              <expression op='[country_name]' />
            </expression>
            <first-end-point object-id='df_canada.csv_29845CF8C1E8498DAD7945B440AB2B1C' />
            <second-end-point object-id='df2_canada.csv_01C3071DA1CE4A6C85F2C0873E596AF0' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[country_name]' />
              <expression op='[country_name (df3_canada.csv)]' />
            </expression>
            <first-end-point object-id='df2_canada.csv_01C3071DA1CE4A6C85F2C0873E596AF0' />
            <second-end-point object-id='df3_canada.csv_2D45F6D3F217461495C5B75E3B8DEBCC' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Migration trend to and from Canada'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='28'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_canada+' name='federated.1hgvwy21yqmkws10tdu5q129633o' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hgvwy21yqmkws10tdu5q129633o'>
            <column caption='Avg Country Migration' datatype='real' name='[avg_country_migration]' role='measure' type='quantitative' />
            <column-instance column='[target_country_name]' derivation='None' name='[none:target_country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[avg_country_migration]' derivation='Sum' name='[sum:avg_country_migration:ok]' pivot='key' type='ordinal' />
            <column-instance column='[avg_country_migration]' derivation='Sum' name='[sum:avg_country_migration:qk]' pivot='key' type='quantitative' />
            <column caption='Target Country Name' datatype='string' name='[target_country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_country_migration:qk]' included-values='all' />
          <slices>
            <column>[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_country_migration:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hgvwy21yqmkws10tdu5q129633o].[Longitude (generated)]' field-type='quantitative' max='28945932.969944149' min='-22179722.812496472' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1hgvwy21yqmkws10tdu5q129633o].[Latitude (generated)]' field-type='quantitative' max='16904914.046835408' min='-12309747.706270609' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hgvwy21yqmkws10tdu5q129633o].[none:target_country_name:nk]' />
              <text column='[federated.1hgvwy21yqmkws10tdu5q129633o].[none:target_country_name:nk]' />
              <text column='[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_country_migration:ok]' />
              <lod column='[federated.1hgvwy21yqmkws10tdu5q129633o].[none:target_country_name:nk]' />
              <geometry column='[federated.1hgvwy21yqmkws10tdu5q129633o].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3733149766921997' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hgvwy21yqmkws10tdu5q129633o].[Latitude (generated)]</rows>
        <cols>[federated.1hgvwy21yqmkws10tdu5q129633o].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0AFB09F5-93B2-4B4B-8326-7E8A24034C16}' />
    </worksheet>
    <worksheet name='Popular industries by migration (In Canada)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='28'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_canada+' name='federated.1hgvwy21yqmkws10tdu5q129633o' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hgvwy21yqmkws10tdu5q129633o'>
            <column caption='Avg Industry Migration' datatype='real' name='[avg_industry_migration]' role='measure' type='quantitative' />
            <column caption='Industry Name' datatype='string' name='[industry_name]' role='dimension' type='nominal' />
            <column-instance column='[industry_name]' derivation='None' name='[none:industry_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[avg_industry_migration]' derivation='Sum' name='[sum:avg_industry_migration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_industry_migration:qk]' included-values='in-range'>
            <min>-3.9659999999999997</min>
            <max>669.13</max>
          </filter>
          <slices>
            <column>[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_industry_migration:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1hgvwy21yqmkws10tdu5q129633o].[none:industry_name:nk]' />
              <size column='[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_industry_migration:qk]' />
              <text column='[federated.1hgvwy21yqmkws10tdu5q129633o].[none:industry_name:nk]' />
              <text column='[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_industry_migration:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.1hgvwy21yqmkws10tdu5q129633o].[none:industry_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run><![CDATA[<[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_industry_migration:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='11' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8DE90B28-A7AC-4CDA-9E97-EF1754FDE4E7}' />
    </worksheet>
    <worksheet name='Popular skills by migration (In Canada)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='28'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_canada+' name='federated.1hgvwy21yqmkws10tdu5q129633o' />
          </datasources>
          <datasource-dependencies datasource='federated.1hgvwy21yqmkws10tdu5q129633o'>
            <column caption='Avg Skill Migration' datatype='real' name='[avg_skill_migration]' role='measure' type='quantitative' />
            <column-instance column='[avg_skill_migration]' derivation='None' name='[none:avg_skill_migration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[skill_group_name]' derivation='None' name='[none:skill_group_name:nk]' pivot='key' type='nominal' />
            <column caption='Skill Group Name' datatype='string' name='[skill_group_name]' role='dimension' type='nominal' />
            <column-instance column='[avg_skill_migration]' derivation='Sum' name='[sum:avg_skill_migration:ok]' pivot='key' type='ordinal' />
            <column-instance column='[avg_skill_migration]' derivation='Sum' name='[sum:avg_skill_migration:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1hgvwy21yqmkws10tdu5q129633o].[none:avg_skill_migration:qk]' included-values='all' />
          <slices>
            <column>[federated.1hgvwy21yqmkws10tdu5q129633o].[none:avg_skill_migration:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_skill_migration:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_skill_migration:ok]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-size' data-class='subtotal' field='[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_skill_migration:ok]' value='9' />
            <format attr='font-size' data-class='total' field='[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_skill_migration:ok]' value='9' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_skill_migration:qk]' value='' />
            <format attr='font-size' field='[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_skill_migration:ok]' value='9' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1hgvwy21yqmkws10tdu5q129633o].[none:skill_group_name:nk]' />
              <text column='[federated.1hgvwy21yqmkws10tdu5q129633o].[none:skill_group_name:nk]' />
              <text column='[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_skill_migration:ok]' />
              <size column='[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_skill_migration:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.1hgvwy21yqmkws10tdu5q129633o].[none:skill_group_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run><![CDATA[<[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_skill_migration:ok]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='top' />
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='11' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1ADAAD4C-6D0A-478D-9492-96CBD7C2339E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Canada Migration Trend (2015 - 2019)' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='307' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1416' minheight='964' minwidth='1416' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='9' param='vert' removable='false' type-v2='layout-flow' w='98870' x='565' y='830'>
            <zone h='5187' id='10' type-v2='title' w='98870' x='565' y='830'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93153' id='7' param='vert' removable='false' type-v2='layout-flow' w='98870' x='565' y='6017'>
              <zone h='93153' id='1' param='vert' removable='false' type-v2='layout-flow' w='98870' x='565' y='6017'>
                <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98870' x='565' y='6017' />
                <zone h='82676' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98870' x='565' y='16494'>
                  <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                    <story-points>
                      <story-point caption='Nationalities Of Professionals Moving To and From Canada' captured-sheet='Migration trend to and from Canada' id='1'>
                        <capturedDeltas>
                          <worksheet name='Migration trend to and from Canada'>
                            <filter class='quantitative' column='[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_country_migration:qk]' included-values='in-range-or-null'>
                              <min>-0.152</min>
                              <max>13.847999999999999</max>
                            </filter>
                            <style delta-type='added'>
                              <style-rule element='axis'>
                                <encoding attr='space' class='0' field='[federated.1hgvwy21yqmkws10tdu5q129633o].[Latitude (generated)]' field-type='quantitative' max='20451406.290588316' min='-17919327.416515481' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                                <encoding attr='space' class='0' field='[federated.1hgvwy21yqmkws10tdu5q129633o].[Longitude (generated)]' field-type='quantitative' max='61286760.207162827' min='21211743.521584339' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                              </style-rule>
                            </style>
                          </worksheet>
                        </capturedDeltas>
                      </story-point>
                      <story-point caption='Top 10 Industries For Migration To Canada' captured-sheet='Popular industries by migration (In Canada)' id='2' />
                      <story-point caption='Top Skills For Migration To Canada' captured-sheet='Popular skills by migration (In Canada)' id='3' />
                    </story-points>
                  </flipboard>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{D8393669-3417-4010-A8FB-53259958D5D2}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='30'>
    <window class='worksheet' name='Migration trend to and from Canada'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_country_migration:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1hgvwy21yqmkws10tdu5q129633o].[none:target_country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hgvwy21yqmkws10tdu5q129633o].[none:base_country_name:nk]</field>
            <field>[federated.1hgvwy21yqmkws10tdu5q129633o].[none:target_country_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{46A0F198-0B48-43A4-BADD-151163B1473C}' />
    </window>
    <window class='worksheet' name='Popular industries by migration (In Canada)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hgvwy21yqmkws10tdu5q129633o].[sum:avg_industry_migration:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1hgvwy21yqmkws10tdu5q129633o].[none:industry_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1hgvwy21yqmkws10tdu5q129633o].[none:country_name:nk]</field>
            <field>[federated.1hgvwy21yqmkws10tdu5q129633o].[none:industry_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C659BBDA-93B7-4A16-AC89-C588749811C0}' />
    </window>
    <window class='worksheet' name='Popular skills by migration (In Canada)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hgvwy21yqmkws10tdu5q129633o].[none:avg_skill_migration:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1hgvwy21yqmkws10tdu5q129633o].[none:skill_group_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1hgvwy21yqmkws10tdu5q129633o].[none:avg_skill_migration:qk]</field>
            <field>[federated.1hgvwy21yqmkws10tdu5q129633o].[none:skill_group_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{065A4D68-F606-4E63-880E-BDD98248F538}' />
    </window>
    <window class='dashboard' maximized='true' name='Canada Migration Trend (2015 - 2019)'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{3AEFB4FE-8C8C-47F9-9897-08D6CE753627}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Canada Migration Trend (2015 - 2019)' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Migration trend to and from Canada' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Popular industries by migration (In Canada)' width='192'>
      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
      W1/h88MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Popular skills by migration (In Canada)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
